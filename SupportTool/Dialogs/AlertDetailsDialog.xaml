<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="SupportTool.Dialogs.AlertDetailsDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:SupportTool.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:SupportTool"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:NullableIntConverter x:Key="NullableIntConverter" />
        <converters:NullableDoubleConverter x:Key="NullableDoubleConverter" />
        <converters:FloatToString x:Key="FlotToStringConverter" />
    </Page.Resources>

    <Grid
        x:Name="RootGrid"
        Padding="0"
        HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Header  -->

        <!--  Content  -->
        <!--<ScrollViewer Grid.Row="1">
            <StackPanel Spacing="16">
        -->
        <!--  Print Duration Alert Section  -->
        <!--
                <StackPanel>
                    <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="Print Duration Alert" />
                    <StackPanel Margin="0,8,0,0" Orientation="Horizontal">
                        <TextBlock Text="Status: " />
                        <TextBlock Margin="8,0,0,0" Text="{x:Bind HasPrintDurationAlert}" />
                    </StackPanel>
                    <Button
                        Click="CreatePrintDurationAlert_Click"
                        Content="Create Print Duration Alert"
                        Visibility="{x:Bind ShowCreatePrintDurationButton}" />
                </StackPanel>

        -->
        <!--  Error Rate Alert Section  -->
        <!--
                <StackPanel>
                    <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="Error Rate Alert" />
                    <StackPanel Margin="0,8,0,0" Orientation="Horizontal">
                        <TextBlock Text="Status: " />
                        <TextBlock Margin="8,0,0,0" Text="{x:Bind HasErrorRateAlert}" />
                    </StackPanel>
                    <Button
                        Click="CreateErrorRateAlert_Click"
                        Content="Create Error Rate Alert"
                        Visibility="{x:Bind ShowCreateErrorRateButton}" />
                </StackPanel>
            </StackPanel>
        </ScrollViewer>-->
        <!--  Footer  -->
        <Grid
            Grid.Row="1"
            Margin="0,0,0,20"
            HorizontalAlignment="Stretch"
            ColumnSpacing="10"
            RowSpacing="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Button
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Stretch"
                Click="ApplyPrintDurationTemplate_Click"
                Content="Print Duration Template" />
            <Button
                Grid.Row="0"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                Click="ApplyErrorRateTemplate_Click"
                Content="Error Rate Template" />

            <ProgressBar
                x:Name="MetricsFetchProgress"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                IsIndeterminate="True"
                ShowError="False"
                ShowPaused="False"
                Visibility="Collapsed" />
            <TextBlock
                x:Name="NRMetrics"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Text=""
                TextWrapping="Wrap" />
            <Button
                x:Name="FetchMetricsButton"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Click="FetchMetricsButton_Click"
                Content="Past 7 days metrics"
                ToolTipService.ToolTip="Fetch the past week's median duration for this carrier and retailer" />
        </Grid>

        <ScrollView
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
            <StackPanel Padding="10" Spacing="10">

                <CheckBox Content="Enabled" IsChecked="{x:Bind NewAlertData.Enabled, Mode=TwoWay}" />

                <TextBox x:Name="NameTextBox" Text="{x:Bind NewAlertData.Name, Mode=TwoWay}">
                    <TextBox.Header>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Name:"
                            TextDecorations="Underline"
                            ToolTipService.ToolTip="The name of the alert condition. This should be descriptive and indicate what the condition is monitoring." />
                    </TextBox.Header>
                </TextBox>

                <ComboBox
                    HorizontalAlignment="Stretch"
                    ItemsSource="{x:Bind Severities}"
                    SelectedItem="{x:Bind NewAlertData.Severity, Mode=TwoWay}">
                    <ComboBox.Header>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Severity:"
                            TextDecorations="Underline"
                            ToolTipService.ToolTip="The severity level of the alert (CRITICAL is default)." />
                    </ComboBox.Header>
                </ComboBox>

                <TextBox
                    AcceptsReturn="True"
                    Header="Description:"
                    Text="{x:Bind NewAlertData.Description, Mode=TwoWay}"
                    TextWrapping="Wrap" />

                <TextBox
                    MinHeight="100"
                    AcceptsReturn="True"
                    Header="NRQL Query:"
                    Text="{x:Bind NewAlertData.NrqlQuery, Mode=TwoWay}"
                    TextWrapping="Wrap" />

                <TextBox Text="{x:Bind NewAlertData.RunbookUrl, Mode=TwoWay}">
                    <TextBox.Header>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Runbook URL:"
                            TextDecorations="Underline"
                            ToolTipService.ToolTip="A URL linking to a runbook, which is a set of instructions for responding to an incident triggered by this condition." />
                    </TextBox.Header>
                </TextBox>

                <ComboBox
                    HorizontalAlignment="Stretch"
                    ItemsSource="{x:Bind AggregationMethods}"
                    SelectedItem="{x:Bind NewAlertData.AggregationMethod, Mode=TwoWay}">
                    <ComboBox.Header>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Aggregation Method:"
                            TextDecorations="Underline"
                            ToolTipService.ToolTip="The method used to aggregate data from the NRQL query. This affects how the data is processed before evaluation." />
                    </ComboBox.Header>
                </ComboBox>

                <NumberBox
                    AcceptsExpression="True"
                    Minimum="0"
                    Value="{x:Bind NewAlertData.AggregationDelay, Mode=TwoWay}">
                    <NumberBox.Header>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Aggregation Delay:"
                            TextDecorations="Underline"
                            ToolTipService.ToolTip="The delay before the condition starts evaluating data after it becomes active. This allows for initial data stabilization." />
                    </NumberBox.Header>
                </NumberBox>

                <NumberBox
                    AcceptsExpression="True"
                    Minimum="0"
                    Value="{x:Bind NewAlertData.AggregationWindow, Mode=TwoWay}">
                    <NumberBox.Header>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Aggregation Window:"
                            TextDecorations="Underline"
                            ToolTipService.ToolTip="he time window over which data is aggregated before being evaluated against the threshold." />
                    </NumberBox.Header>
                </NumberBox>

                <ComboBox
                    HorizontalAlignment="Stretch"
                    ItemsSource="{x:Bind CriticalOperators}"
                    SelectedItem="{x:Bind NewAlertData.CriticalOperator, Mode=TwoWay}">
                    <ComboBox.Header>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Critical Operator:"
                            TextDecorations="Underline"
                            ToolTipService.ToolTip="The operator used to compare the aggregated data against the critical threshold." />
                    </ComboBox.Header>
                </ComboBox>

                <NumberBox AcceptsExpression="True" Value="{x:Bind NewAlertData.CriticalThreshold, Mode=TwoWay}">
                    <NumberBox.Header>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Critical Threshold:"
                            TextDecorations="Underline"
                            ToolTipService.ToolTip="The value that triggers a critical alert." />
                    </NumberBox.Header>
                </NumberBox>

                <NumberBox
                    AcceptsExpression="True"
                    Minimum="0"
                    Value="{x:Bind NewAlertData.CriticalThresholdDuration, Mode=TwoWay}">
                    <NumberBox.Header>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Critical Threshold Duration:"
                            TextDecorations="Underline"
                            ToolTipService.ToolTip="How long the condition must be met to trigger an alert." />
                    </NumberBox.Header>
                </NumberBox>

                <ComboBox
                    HorizontalAlignment="Stretch"
                    ItemsSource="{x:Bind ThresholdOccurrences}"
                    SelectedItem="{x:Bind NewAlertData.CriticalThresholdOccurrences, Mode=TwoWay}">
                    <ComboBox.Header>
                        <TextBlock
                            VerticalAlignment="Center"
                            Text="Critical Threshold Occurrences:"
                            TextDecorations="Underline"
                            ToolTipService.ToolTip="How many times the condition must occur to trigger an alert." />
                    </ComboBox.Header>
                </ComboBox>
            </StackPanel>
        </ScrollView>



        <Canvas
            x:Name="ToastContainer"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            IsHitTestVisible="True" />
    </Grid>
</Page>